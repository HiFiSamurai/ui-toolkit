$controlColor: #6D3258;

$borderRadius: 3px;

// Spacings
$smallSpacing: 5px;
$mediumSpacing: 15px;
$largeSpacing: 30px;
$xlargeSpacing: 60px;

$spacing: (
    small: $smallSpacing,
    medium: $mediumSpacing,
    large: $largeSpacing,
    xlarge: $xlargeSpacing
);

// Transition Timing
$transitionNormal: 300ms;
$transitionSubtle: 100ms;
$transitionLong: 600ms;

// Media Breakpoints
$breakpoints: (
    'phone': 576px,
    'tablet':  768px,
    'tablet-wide': 992px,
    'desktop': 1200px,
    'desktop-wide': 1600px,
) !default;

@mixin media($breakpoint, $direction: 'min') {
    @if map-has-key($breakpoints, $breakpoint) {
        @media (#{$direction}-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }
    @else {    /* stylelint-disable-line at-rule-empty-line-before */
        @warn "Invalid breakpoint `#{$breakpoint}` - `#{direction}`. "
            + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

// Z-Index Levels
$chromeZIndex: 1000;
$menuZIndex: 2000;
$dialogZIndex: 3000;

//Mixins

@mixin delayed-list($initial: $transitionNormal, $offset: $transitionSubtle) {
    $max: 10;

    @for $i from 1 through $max {
        &:nth-child(#{$i}) {
            animation-duration: $initial + ($offset * ($i - 1));
        }
    }

    &:nth-child(n+#{$max}) {
        animation-duration: $initial + ($offset * ($max - 1));
    }
}

@mixin center() {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
}

@mixin shadowed($color: $controlColor) {
    box-shadow: 1px 1px 1px $color;
}
